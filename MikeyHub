local repo = "TheGenerationOfMansions/Somet-44234"
local scriptPath = "MikeyHub" -- Your script file path in the repo
local commitURL = "https://api.github.com/repos/"..repo.."/commits?path="..scriptPath.."&per_page=1"
local scriptURL = "https://raw.githubusercontent.com/"..repo.."/refs/heads/main/"..scriptPath

-- Flag to prevent the script from re-executing after updating
local scriptUpdated = false

-- Set the current version for testing
local currentVersion = "1.0.2"
print("Current Version: " .. currentVersion)

-- Function to get the latest commit hash from GitHub
local function getLatestCommitHash()
    local success, response = pcall(function()
        return game:HttpGet(commitURL)
    end)
    
    if success and response then
        local json = game:GetService("HttpService"):JSONDecode(response)
        return json[1] and json[1].sha or nil
    end
    return nil
end

-- Function to fetch the latest version of the script
local function getLatestScript()
    local success, response = pcall(function()
        return game:HttpGet(scriptURL)
    end)
    return success and response or nil
end

-- Fetch the stored commit hash from file or global environment
local function getStoredCommitHash()
    local storedHash = getgenv().MikeyHubCommitHash
    if storedHash then
        return storedHash
    end

    -- If not stored globally, check if the hash is stored in a file
    local file = pcall(function()
        return readfile("MikeyHubCommitHash.txt") -- File that stores the commit hash
    end)
    return file or nil
end

-- Store the commit hash in a file or using getgenv
local function storeCommitHash(commitHash)
    -- Store globally using getgenv (won't persist after the session ends)
    getgenv().MikeyHubCommitHash = commitHash

    -- Alternatively, store in a file to persist across sessions
    pcall(function()
        writefile("MikeyHubCommitHash.txt", commitHash) -- Write to file
    end)
end

local storedCommitHash = getStoredCommitHash()
local latestCommitHash = getLatestCommitHash()

-- Check if the script is outdated
if storedCommitHash == nil then
    -- If no commit hash is stored, this is the first run, so we store it
    if latestCommitHash then
        storeCommitHash(latestCommitHash)
        print("Commit hash stored for first time!")
    else
        warn("Failed to retrieve commit hash!")
    end
elseif latestCommitHash and storedCommitHash ~= latestCommitHash then
    -- If commit hashes don't match, update the script
    warn("Outdated version detected! Updating to the latest commit: " .. latestCommitHash)
    
    local latestScript = getLatestScript()
    if latestScript then
        -- Prevent re-execution of the script
        if not scriptUpdated then
            loadstring(latestScript)() -- Auto-update to the latest script version
            scriptUpdated = true -- Set the flag to true to prevent future executions
        end
    else
        warn("Failed to fetch the latest script. Kicking player...")
        game.Players.LocalPlayer:Kick("Your version is outdated! Please restart to update.")
    end
else
    print("Example Script 2")
end
