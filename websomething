local WebhookManager = {}

local HttpService = game:GetService("HttpService")
local secretKey = "MikeS"  -- Your secret key

local function GenerateDynamicHash(arg)
	if arg == secretKey then
	return HttpService:UrlEncode(secretKey)
	end
end

local function VerifyHash(HashToken)
	local generatedHash = GenerateDynamicHash(secretKey)
	return HashToken == generatedHash
end



local function CheckDevice()
	local platform = game:GetService("UserInputService"):GetPlatform()

	if platform == Enum.Platform.Android then
		return "Android"
	elseif platform == Enum.Platform.IOS then
		return "IPhone"
	else
		return "PC"
	end
end

function WebhookManager.SendWebhook(HashToken, Url, Title, Description)
	if not VerifyHash(HashToken) then
		return false, "Invalid Hash"
	end

	local Headers = {
		['Content-Type'] = 'application/json',
	}

	local data = {
		["embeds"] = {
			{
				["author"] = {
					["name"] = Title,
					["icon_url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. game.Players.LocalPlayer.UserId .. "&width=420&height=420"
				},
				["description"] = Description,
				["type"] = "rich",
				["color"] = tonumber(0xffffff),
				["fields"] = {
					{
						["name"] = "HWID :",
						["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
						["inline"] = true,
					},
					{
						["name"] = "Player Username :",
						["value"] = game.Players.LocalPlayer.Name,
						["inline"] = true,
					},
					{
						["name"] = "Player DisplayName :",
						["value"] = game.Players.LocalPlayer.DisplayName,
						["inline"] = true,
					},
					{
						["name"] = "Player UserId :",
						["value"] = game.Players.LocalPlayer.UserId,
						["inline"] = true,
					},
					{
						["name"] = "Player Account Age :",
						["value"] = game.Players.LocalPlayer.AccountAge,
						["inline"] = true,
					},
					{
						["name"] = "Executor :",
						["value"] = identifyexecutor(),
						["inline"] = true,
					},
					{
						["name"] = "Using Script :",
						["value"] = gameInfo and gameInfo.Name or "Unknown",
						["inline"] = true,
					},
					{
						["name"] = "Device :",
						["value"] = CheckDevice(),
						["inline"] = true,
					},
				},
			},
		},
	}

	local PlayerData = HttpService:JSONEncode(data)
	local Request = http_request or request or HttpPost or syn.request
	Request({Url = Url, Body = PlayerData, Method = "POST", Headers = Headers})

	return true, "Webhook Sent Successfully"
end

WebhookManager.GenerateDynamicHash = GenerateDynamicHash

return WebhookManager
